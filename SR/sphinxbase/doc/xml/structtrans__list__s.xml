<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structtrans__list__s" kind="struct" language="C++" prot="public">
    <compoundname>trans_list_s</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtrans__list__s_1a15223c70915f916f5656627985c6fd39" prot="public" static="no" mutable="no">
        <type><ref refid="structhash__table__t" kindref="compound">hash_table_t</ref> *</type>
        <definition>hash_table_t* trans_list_s::null_trans</definition>
        <argsstring></argsstring>
        <name>null_trans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" line="64" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtrans__list__s_1ade18f3313bc542cee585f0c5c16de96a" prot="public" static="no" mutable="no">
        <type><ref refid="structhash__table__t" kindref="compound">hash_table_t</ref> *</type>
        <definition>hash_table_t* trans_list_s::trans</definition>
        <argsstring></argsstring>
        <name>trans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" line="65" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Adjacency list (opaque) for a state in an FSG. </para>    </briefdescription>
    <detaileddescription>
<para>Actually we use hash tables so that random access is a bit faster. Plus it allows us to make the lookup code a bit less ugly. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="348">
        <label>trans_list_s</label>
        <link refid="structtrans__list__s"/>
        <childnode refid="349" relation="usage">
          <edgelabel>trans</edgelabel>
          <edgelabel>null_trans</edgelabel>
        </childnode>
      </node>
      <node id="350">
        <label>hash_entry_s</label>
        <link refid="structhash__entry__s"/>
        <childnode refid="350" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="349">
        <label>hash_table_t</label>
        <link refid="structhash__table__t"/>
        <childnode refid="350" relation="usage">
          <edgelabel>table</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" line="63" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/fsg_model.c" bodystart="63" bodyend="66"/>
    <listofallmembers>
      <member refid="structtrans__list__s_1a15223c70915f916f5656627985c6fd39" prot="public" virt="non-virtual"><scope>trans_list_s</scope><name>null_trans</name></member>
      <member refid="structtrans__list__s_1ade18f3313bc542cee585f0c5c16de96a" prot="public" virt="non-virtual"><scope>trans_list_s</scope><name>trans</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
