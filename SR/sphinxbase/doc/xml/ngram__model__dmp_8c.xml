<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="ngram__model__dmp_8c" kind="file" language="C++">
    <compoundname>ngram_model_dmp.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="pio_8h" local="yes">sphinxbase/pio.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="byteorder_8h" local="yes">sphinxbase/byteorder.h</includes>
    <includes refid="listelem__alloc_8h" local="yes">sphinxbase/listelem_alloc.h</includes>
    <includes refid="ngram__model__dmp_8h" local="yes">ngram_model_dmp.h</includes>
    <includes refid="lm3g__templates_8c" local="yes">lm3g_templates.c</includes>
    <incdepgraph>
      <node id="1844">
        <label>sys/stat.h</label>
      </node>
      <node id="1859">
        <label>lm3g_templates.c</label>
        <link refid="lm3g__templates_8c_source"/>
        <childnode refid="1833" relation="include">
        </childnode>
      </node>
      <node id="1843">
        <label>sphinxbase/pio.h</label>
        <link refid="pio_8h"/>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1846">
        <label>stdarg.h</label>
      </node>
      <node id="1833">
        <label>assert.h</label>
      </node>
      <node id="1853">
        <label>sphinxbase/ngram_model.h</label>
        <link refid="ngram__model_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
      </node>
      <node id="1836">
        <label>stdlib.h</label>
      </node>
      <node id="1839">
        <label>setjmp.h</label>
      </node>
      <node id="1856">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
      </node>
      <node id="1847">
        <label>errno.h</label>
      </node>
      <node id="1832">
        <label>src/libsphinxbase/lm/ngram_model_dmp.c</label>
        <link refid="ngram_model_dmp.c"/>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1848" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
      </node>
      <node id="1850">
        <label>ngram_model_dmp.h</label>
        <link refid="ngram__model__dmp_8h_source"/>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
        <childnode refid="1858" relation="include">
        </childnode>
      </node>
      <node id="1838">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1837">
        <label>limits.h</label>
      </node>
      <node id="1857">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1842">
        <label>sphinx_config.h</label>
      </node>
      <node id="1835">
        <label>string.h</label>
      </node>
      <node id="1851">
        <label>sphinxbase/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="1840" relation="include">
        </childnode>
      </node>
      <node id="1848">
        <label>sphinxbase/byteorder.h</label>
        <link refid="byteorder_8h_source"/>
      </node>
      <node id="1858">
        <label>lm3g_model.h</label>
        <link refid="lm3g__model_8h_source"/>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
      </node>
      <node id="1845">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
      </node>
      <node id="1855">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
      </node>
      <node id="1841">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1842" relation="include">
        </childnode>
      </node>
      <node id="1840">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1854">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1834">
        <label>stdio.h</label>
      </node>
      <node id="1849">
        <label>sphinxbase/listelem_alloc.h</label>
        <link refid="listelem__alloc_8h"/>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1852">
        <label>ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="1853" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ngram__model__dmp_8c_1a4e841036a9698f67d4e328b7f0889c56" prot="public" static="no">
        <name>TSEG_BASE</name>
        <param><defname>m</defname></param>
        <param><defname>b</defname></param>
        <initializer>((m)-&gt;lm3g.tseg_base[(b)&gt;&gt;LOG_BG_SEG_SZ])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="60" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__dmp_8c_1ae6163bc1d8bd35e117a0155940e5fa68" prot="public" static="no">
        <name>FIRST_BG</name>
        <param><defname>m</defname></param>
        <param><defname>u</defname></param>
        <initializer>((m)-&gt;lm3g.unigrams[u].bigrams)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="61" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__dmp_8c_1af7f50fc4f451973a32e133d645c3df88" prot="public" static="no">
        <name>FIRST_TG</name>
        <param><defname>m</defname></param>
        <param><defname>b</defname></param>
        <initializer>(TSEG_BASE((m),(b))+((m)-&gt;lm3g.bigrams[b].trigrams))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="62" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__dmp_8c_1ad9081511cc5105e5838d5c5b481b59d8" prot="public" static="no">
        <name>LMDMP_VERSION_TG_16BIT</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>VERSION 1 is the simplest DMP file which is trigram or lower which used 16 bits in bigram and trigram. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="735" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__dmp_8c_1a6f477decab5cb1607fc77aa1b596a388" prot="public" static="no">
        <name>NGRAM_MODEL_TYPE</name>
        <initializer><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="928" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="930" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ngram__model__dmp_8c_1a95ff1ac28ca3447cd85bd89f3be5c6cd" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char darpa_hdr[]</definition>
        <argsstring>[]</argsstring>
        <name>darpa_hdr</name>
        <initializer>= &quot;Darpa Trigram LM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="57" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ngram__model__dmp_8c_1afa57c81d5f832f37a7f5479c2fe1d098" prot="public" static="yes" mutable="no">
        <type><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref></type>
        <definition>static ngram_funcs_t ngram_model_dmp_funcs</definition>
        <argsstring></argsstring>
        <name>ngram_model_dmp_funcs</name>
        <initializer>= {
    ngram_model_dmp_free,          
    ngram_model_dmp_apply_weights, 
    lm3g_template_score,           
    lm3g_template_raw_score,       
    lm3g_template_add_ug,          
    lm3g_template_flush,           
    lm3g_template_iter,             
    lm3g_template_mgrams,          
    lm3g_template_successors,      
    lm3g_template_iter_get,        
    lm3g_template_iter_next,       
    lm3g_template_iter_free        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="58" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ngram__model__dmp_8c_1ade7a4f15cc7de2564ebcf7d59290923c" prot="public" static="yes" mutable="no">
        <type>char const *</type>
        <definition>char const* fmtdesc[]</definition>
        <argsstring>[]</argsstring>
        <name>fmtdesc</name>
        <initializer>= {
    &quot;BEGIN FILE FORMAT DESCRIPTION&quot;,
    &quot;Header string length (int32) and string (including trailing 0)&quot;,
    &quot;Original LM filename string-length (int32) and filename (including trailing 0)&quot;,
    &quot;(int32) version number (present iff value &lt;= 0)&quot;,
    &quot;(int32) original LM file modification timestamp (iff version# present)&quot;,
    &quot;(int32) string-length and string (including trailing 0) (iff version# present)&quot;,
    &quot;... previous entry continued any number of times (iff version# present)&quot;,
    &quot;(int32) 0 (terminating sequence of strings) (iff version# present)&quot;,
    &quot;(int32) log_bg_seg_sz (present iff different from default value of LOG2_BG_SEG_SZ)&quot;,
    &quot;(int32) lm_t.ucount (must be &gt; 0)&quot;,
    &quot;(int32) lm_t.bcount&quot;,
    &quot;(int32) lm_t.tcount&quot;,
    &quot;lm_t.ucount+1 unigrams (including sentinel)&quot;,
    &quot;lm_t.bcount+1 bigrams (including sentinel 64 bits (bg_t) each if version=-1/-2, 128 bits (bg32_t) each if version=-3&quot;,
    &quot;lm_t.tcount trigrams (present iff lm_t.tcount &gt; 0 32 bits (tg_t) each if version=-1/-2, 64 bits (tg32_t) each if version=-3)&quot;,
    &quot;(int32) lm_t.n_prob2&quot;,
    &quot;(int32) lm_t.prob2[]&quot;,
    &quot;(int32) lm_t.n_bo_wt2 (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) lm_t.bo_wt2[] (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) lm_t.n_prob3 (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) lm_t.prob3[] (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) (lm_t.bcount+1)/BG_SEG_SZ+1 (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) lm_t.tseg_base[] (present iff lm_t.tcount &gt; 0)&quot;,
    &quot;(int32) Sum(all word string-lengths, including trailing 0 for each)&quot;,
    &quot;All word strings (including trailing 0 for each)&quot;,
    &quot;END FILE FORMAT DESCRIPTION&quot;,
    NULL,
}</initializer>
        <briefdescription>
<para>Please look at the definition of. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="684" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="684" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__model__dmp_8c_1a0cce50a3be8111203ad24e62d695857b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structunigram__s" kindref="compound">unigram_t</ref> *</type>
        <definition>static unigram_t* new_unigram_table</definition>
        <argsstring>(int32 n_ug)</argsstring>
        <name>new_unigram_table</name>
        <param>
          <type>int32</type>
          <declname>n_ug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="65" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="65" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1ade5386da4c1b7dc627201559a4c3a2fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_dmp_read</definition>
        <argsstring>(cmd_ln_t *config, const char *file_name, logmath_t *lmath)</argsstring>
        <name>ngram_model_dmp_read</name>
        <param>
          <type><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <briefdescription>
<para>Read an N-Gram model from a Sphinx .DMP binary file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="79" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="79" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a28a2d280f99797a5d6c0259758c4af77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref> *</type>
        <definition>ngram_model_dmp_t* ngram_model_dmp_build</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_dmp_build</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Construct a DMP format model from a generic base model. </para>        </briefdescription>
        <detaileddescription>
<para>Note: If base is already a DMP format model, this just calls <ref refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" kindref="member">ngram_model_retain()</ref>, and any changes will also be made in the base model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="476" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="476" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1ab6dc88b6664a0c43cd582bc99de1e062" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwrite_int32</definition>
        <argsstring>(FILE *fh, int32 val)</argsstring>
        <name>fwrite_int32</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="649" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="649" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1aceb968a16e166abfe6331d641f250158" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwrite_ug</definition>
        <argsstring>(FILE *fh, unigram_t *ug, logmath_t *lmath)</argsstring>
        <name>fwrite_ug</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="structunigram__s" kindref="compound">unigram_t</ref> *</type>
          <declname>ug</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="655" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="655" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a4e04a22b17b68780d9e0e51712bbf1ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwrite_bg</definition>
        <argsstring>(FILE *fh, bigram_t *bg)</argsstring>
        <name>fwrite_bg</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="structbigram__s" kindref="compound">bigram_t</ref> *</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="671" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a590ad9852e27cbc074631e74f12a08b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwrite_tg</definition>
        <argsstring>(FILE *fh, trigram_t *tg)</argsstring>
        <name>fwrite_tg</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="structtrigram__s" kindref="compound">trigram_t</ref> *</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="677" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a1d12de90fc8ea499d02f0f3008d4fc5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_header</definition>
        <argsstring>(FILE *fh)</argsstring>
        <name>ngram_model_dmp_write_header</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="715" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="715" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a0410034ccda02c4699aa46c4976ee81f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_lm_filename</definition>
        <argsstring>(FILE *fh, const char *lmfile)</argsstring>
        <name>ngram_model_dmp_write_lm_filename</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lmfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="724" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="724" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a32397e68bef34e02d7fa2fd42a6ebc19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_version</definition>
        <argsstring>(FILE *fh, int32 mtime)</argsstring>
        <name>ngram_model_dmp_write_version</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>mtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="740" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="740" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1ad2c497519b6367c74f5df9e224103091" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_ngram_counts</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_ngram_counts</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="747" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="747" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a484dbfe66c62453eb974078254f17690" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_fmtdesc</definition>
        <argsstring>(FILE *fh)</argsstring>
        <name>ngram_model_dmp_write_fmtdesc</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="755" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="755" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1ac0365889a8aae84b4c10d3ec9b1773f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_unigram</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_unigram</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="777" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="777" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a9ef352ccb4e06e7f3e663d20f60751cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_bigram</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_bigram</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="789" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="789" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a99a3dd05f7c9f3ff47c05538635d98c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_trigram</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_trigram</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="801" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="801" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a2519d4767bf8e4b2d3e8329fe4dd68e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_bgprob</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_bgprob</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="812" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="812" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a89755587a57677590c20ae45b283930a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_tgbowt</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_tgbowt</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="825" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="825" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a118515ee65b1b25cd2c50c2df058c5bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_tgprob</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_tgprob</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="838" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="838" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a6dcfd84b89f01147e4401057d8dc10c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_tg_segbase</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_tg_segbase</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="851" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="851" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a6f6fc74ce6701b5c6ec1e2c023fa3c10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_write_wordstr</definition>
        <argsstring>(FILE *fh, ngram_model_t *model)</argsstring>
        <name>ngram_model_dmp_write_wordstr</name>
        <param>
          <type>FILE *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="863" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="863" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a30e68a2a2a6bf65c1003b41c2af6a8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_dmp_write</definition>
        <argsstring>(ngram_model_t *base, const char *file_name)</argsstring>
        <name>ngram_model_dmp_write</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Write an N-Gram model to a Sphinx .DMP binary file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="877" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="877" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a440284884dc97d32b597650ae74106bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_model_dmp_apply_weights</definition>
        <argsstring>(ngram_model_t *base, float32 lw, float32 wip, float32 uw)</argsstring>
        <name>ngram_model_dmp_apply_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lw</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>wip</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>uw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="919" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="919" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__dmp_8c_1a65e195d1466da69303878d2527ed80fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_dmp_free</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_dmp_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" line="934" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c" bodystart="934" bodyend="956"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2007<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>\file<sp/>ngram_model_dmp.c<sp/>DMP<sp/>format<sp/>language<sp/>models</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Author:<sp/>David<sp/>Huggins-Daines<sp/>&lt;dhuggins@cs.cmu.edu&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pio_8h" kindref="compound">sphinxbase/pio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/byteorder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listelem__alloc_8h" kindref="compound">sphinxbase/listelem_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngram_model_dmp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>darpa_hdr[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Darpa<sp/>Trigram<sp/>LM&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_dmp_funcs;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG_BASE(m,b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m)-&gt;lm3g.tseg_base[(b)&gt;&gt;LOG_BG_SEG_SZ])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_BG(m,u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m)-&gt;lm3g.unigrams[u].bigrams)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_TG(m,b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TSEG_BASE((m),(b))+((m)-&gt;lm3g.bigrams[b].trigrams))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="normal">new_unigram_table(int32<sp/>n_ug)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*table;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_ug,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structunigram__s" kindref="compound">unigram_t</ref>));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_ug;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[i].<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.f<sp/>=<sp/>-99.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[i].<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.f<sp/>=<sp/>-99.0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="normal">ngram_model_dmp_read(<ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*config,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*lmath)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*model;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>do_mmap,<sp/>do_swap;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>is_pipe;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j,<sp/>k,<sp/>vn,<sp/>n,<sp/>ts;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_unigram;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_bigram;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_trigram;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[1024];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*ugptr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bgptr;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*tgptr;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_word_str;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*map_base<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>base<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/><ref refid="cmd__ln_8h_1a159e691c95089689cf9a8f85a67830a6" kindref="member">cmd_ln_boolean_r</ref>(config,<sp/></highlight><highlight class="stringliteral">&quot;-mmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/><ref refid="pio_8h_1aa3d71506049eb49cf03eff1b89ef281f" kindref="member">fopen_comp</ref>(file_name,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">,<sp/>&amp;is_pipe))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Dump<sp/>file<sp/>%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_pipe<sp/>&amp;&amp;<sp/>do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Dump<sp/>file<sp/>is<sp/>compressed,<sp/>will<sp/>not<sp/>use<sp/>memory-mapped<sp/>I/O\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>strlen(darpa_hdr)+1)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>strlen(darpa_hdr)+1)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>magic<sp/>header<sp/>size<sp/>number<sp/>%x:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>k,<sp/>file_name);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(str,<sp/>1,<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>header\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(str,<sp/>darpa_hdr,<sp/>k)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>header<sp/>%s:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>darpa_hdr);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Byteswapping<sp/>required,<sp/>will<sp/>not<sp/>use<sp/>memory-mapped<sp/>I/O<sp/>for<sp/>LM<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Will<sp/>use<sp/>memory-mapped<sp/>I/O<sp/>for<sp/>LM<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__ADSPBLACKFIN__<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>true<sp/>for<sp/>both<sp/>VisualDSP++<sp/>and<sp/>uClinux.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" kindref="member">E_FATAL</ref>(</highlight><highlight class="stringliteral">&quot;memory<sp/>mapping<sp/>is<sp/>not<sp/>supported<sp/>at<sp/>the<sp/>moment.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(str,<sp/>1,<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>LM<sp/>filename<sp/>in<sp/>header\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>version#,<sp/>if<sp/>present<sp/>(must<sp/>be<sp/>&lt;=<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;vn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vn),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;vn);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vn<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>and<sp/>don&apos;t<sp/>compare<sp/>timestamps<sp/>(we<sp/>don&apos;t<sp/>care)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;ts,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ts),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;ts);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>and<sp/>skip<sp/>format<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(str,<sp/>1,<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>word\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>model-&gt;ucount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n_unigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n_unigram),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n_unigram);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_unigram<sp/>=<sp/>vn;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>model-&gt;bcount,<sp/>tcount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n_bigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n_bigram),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n_bigram);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n_trigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n_trigram),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n_trigram);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;ngrams<sp/>1=%d,<sp/>2=%d,<sp/>3=%d\n&quot;</highlight><highlight class="normal">,<sp/>n_unigram,<sp/>n_bigram,<sp/>n_trigram);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>LM,<sp/>including<sp/>initial<sp/>OOVs<sp/>and<sp/>placeholders;<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__dmp__s_1afd4571dc9702255aed667b5de62e5332" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bigram<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_init(base,<sp/>&amp;ngram_model_dmp_funcs,<sp/>lmath,<sp/>n,<sp/>n_unigram);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]<sp/>=<sp/>n_unigram;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>=<sp/>n_bigram;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>=<sp/>n_trigram;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>unigrams<sp/>(always<sp/>in<sp/>memory,<sp/>as<sp/>they<sp/>contain<sp/>dictionary</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>mappings<sp/>that<sp/>can&apos;t<sp/>be<sp/>precomputed,<sp/>and<sp/>also<sp/>could<sp/>have<sp/>OOVs<sp/>added)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams<sp/>=<sp/>new_unigram_table(n_unigram<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ugptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>n_unigram;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>the<sp/>mapping<sp/>ID,<sp/>we<sp/>don&apos;t<sp/>care<sp/>about<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(ugptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>maping<sp/>id<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>actual<sp/>unigram<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(ugptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structunigram__s" kindref="compound">unigram_t</ref>),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>unigrams<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(base);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Byte<sp/>swap<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;ugptr-&gt;<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;ugptr-&gt;<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;ugptr-&gt;<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>values<sp/>to<sp/>log.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ugptr-&gt;<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(lmath,<sp/>ugptr-&gt;<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.f);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ugptr-&gt;<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(lmath,<sp/>ugptr-&gt;<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.f);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1af46f94d0e21f22f1153f8f1cd9a372d6" kindref="member">E_DEBUG</ref>(2,<sp/>(</highlight><highlight class="stringliteral">&quot;ug<sp/>%d:<sp/>prob<sp/>%d<sp/>bo<sp/>%d<sp/>bigrams<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>ugptr-&gt;<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l,<sp/>ugptr-&gt;<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l,<sp/>ugptr-&gt;<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref>));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ugptr;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.unigrams(+trailer)<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>n_unigram);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>mmap()<sp/>the<sp/>file<sp/>and<sp/>read<sp/>in<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>(read-only)<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>improper<sp/>word<sp/>alignment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&amp;<sp/>0x3)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;-mmap<sp/>specified,<sp/>but<sp/>trigram<sp/>index<sp/>is<sp/>not<sp/>word-aligned.<sp/><sp/>Will<sp/>not<sp/>memory-map.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1ae86e39a2c9e3078f0d9cffc6cf384702" kindref="member">dump_mmap</ref><sp/>=<sp/><ref refid="mmio_8h_1ae3367a51a50a6108178ecfdd6c983c61" kindref="member">mmio_file_read</ref>(file_name);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__dmp__s_1ae86e39a2c9e3078f0d9cffc6cf384702" kindref="member">dump_mmap</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_base<sp/>=<sp/><ref refid="mmio_8h_1a5e6d8bf5cd7785563abc18c70a31ce0d" kindref="member">mmio_file_ptr</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1ae86e39a2c9e3078f0d9cffc6cf384702" kindref="member">dump_mmap</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bigram<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>bigrams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams<sp/>=<sp/>(<ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*)<sp/>(map_base<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>(n_bigram<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbigram__s" kindref="compound">bigram_t</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams<sp/>=</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_bigram<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbigram__s" kindref="compound">bigram_t</ref>));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbigram__s" kindref="compound">bigram_t</ref>),<sp/>n_bigram<sp/>+<sp/>1,<sp/>fp)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>n_bigram<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>bigrams<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams;<sp/>i<sp/>&lt;=<sp/>n_bigram;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++,<sp/>bgptr++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;bgptr-&gt;<ref refid="structbigram__s_1af66faad954d56f5ceaf6ba47cdcd9b1f" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;bgptr-&gt;<ref refid="structbigram__s_1a769b8a54f864ac4844e37cfa17ed1af0" kindref="member">prob2</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;bgptr-&gt;<ref refid="structbigram__s_1a410991054e81251285cbc209964cdaf4" kindref="member">bo_wt2</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.bigrams(+trailer)<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>n_bigram);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>trigrams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams<sp/>=<sp/>(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*)<sp/>(map_base<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>n_trigram<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams<sp/>=</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_trigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref>));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref>),<sp/>n_trigram,<sp/>fp)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>n_trigram)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>trigrams<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>tgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams;<sp/>i<sp/>&lt;<sp/>n_trigram;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++,<sp/>tgptr++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;tgptr-&gt;<ref refid="structtrigram__s_1a492e1fedb16fa11d26a941177c1305be" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;tgptr-&gt;<ref refid="structtrigram__s_1a52f3fad42f7c653a469af0c1b75988a9" kindref="member">prob3</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.trigrams<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>n_trigram);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>tginfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a9be0c8197334e3ef632e9e3abdad6a4f" kindref="member">tginfo</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_unigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a2c96ba8aa34632e4d42908f9384d1b01" kindref="member">le</ref><sp/>=<sp/><ref refid="listelem__alloc_8h_1a4b08b49eaa74cbe9a3c95170cee78de7" kindref="member">listelem_alloc_init</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bigram<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>n_prob2<sp/>and<sp/>prob2<sp/>array<sp/>(in<sp/>memory)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(fp,<sp/>offset,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref><sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>),<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;fread(prob2)<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>[i].l);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>values<sp/>to<sp/>log.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>[i].l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(lmath,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>[i].f);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.prob2<sp/>entries<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>k);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>n_bo_wt2<sp/>and<sp/>bo_wt2<sp/>array<sp/>(in<sp/>memory)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref><sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>),<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>backoff<sp/>weights\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>[i].l);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>values<sp/>to<sp/>log.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>[i].l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(lmath,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>[i].f);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.bo_wt2<sp/>entries<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>k);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>n_prob3<sp/>and<sp/>prob3<sp/>array<sp/>(in<sp/>memory)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref><sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>),<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>trigram<sp/>probability\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>[i].l);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>values<sp/>to<sp/>log.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>[i].l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(lmath,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>[i].f);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.prob3<sp/>entries<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>k);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>tseg_base<sp/>size<sp/>and<sp/>tseg_base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;k,<sp/>map_base<sp/>+<sp/>offset,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref><sp/>=<sp/>(int32<sp/>*)<sp/>(map_base<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>k<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(n_bigram<sp/>+<sp/>1)<sp/>/<sp/>BG_SEG_SZ<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>k,<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>trigram<sp/>index\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[i]);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>LM.tseg_base<sp/>entries<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>k);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>ascii<sp/>word<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;k,<sp/>map_base<sp/>+<sp/>offset,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_word_str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(map_base<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>k;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;k,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(k),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;k);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_word_str<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(k,<sp/>1);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(tmp_word_str,<sp/>1,<sp/>k,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>words\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>make<sp/>sure<sp/>string<sp/>just<sp/>read<sp/>contains<sp/>n_counts[0]<sp/>words<sp/>(PARANOIA!!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_word_str[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>n_unigram)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>word<sp/>strings<sp/>(%d<sp/>doesn&apos;t<sp/>match<sp/>n_unigrams<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,<sp/>n_unigram);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Break<sp/>up<sp/>string<sp/>just<sp/>read<sp/>into<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_unigram;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]<sp/>=<sp/>tmp_word_str<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1aebfe63c3869c271b125a8413ee384412" kindref="member">hash_table_enter</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)i)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)i)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>word<sp/>in<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>strlen(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_unigram;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(tmp_word_str<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1aebfe63c3869c271b125a8413ee384412" kindref="member">hash_table_enter</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)i)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)i)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>word<sp/>in<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>strlen(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(tmp_word_str);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>ascii<sp/>word<sp/>strings<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(base);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*</highlight></codeline>
<codeline lineno="476"><highlight class="normal">ngram_model_dmp_build(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*model;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*newbase;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__iter__s" kindref="compound">ngram_iter_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>sorted_prob2;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>sorted_bo_wt2;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>sorted_prob3;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bgptr;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*tgptr;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>bgcount,<sp/>tgcount,<sp/>seg;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref><sp/>==<sp/>&amp;ngram_model_dmp_funcs)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Using<sp/>existing<sp/>DMP<sp/>model.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)<ref refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" kindref="member">ngram_model_retain</ref>(base);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>new<sp/>base<sp/>model<sp/>structure<sp/>with<sp/>params<sp/>from<sp/>base.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Building<sp/>DMP<sp/>model...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>newbase<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__dmp__s_1afd4571dc9702255aed667b5de62e5332" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_init(newbase,<sp/>&amp;ngram_model_dmp_funcs,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logmath_8h_1a1c1b2ba3b137a39e9e835a8f3e27d381" kindref="member">logmath_retain</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>N-gram<sp/>counts<sp/>over.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>word<sp/>strings<sp/>are<sp/>freed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>unigram<sp/>table<sp/>and<sp/>string<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams<sp/>=<sp/>new_unigram_table(newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor<sp/>=<sp/><ref refid="ngram__model_8h_1a12683dda2253dc45680102f02fbdb1e2" kindref="member">ngram_model_mgrams</ref>(base,<sp/>0);<sp/>itor;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor<sp/>=<sp/><ref refid="ngram__model_8h_1a3a2b285c01393b3ebddaec1fefed11a4" kindref="member">ngram_iter_next</ref>(itor))<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>prob1,<sp/>bo_wt1;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*wids;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>guarantee<sp/>they<sp/>will<sp/>go<sp/>in<sp/>unigram<sp/>order,<sp/>so<sp/>just<sp/>to</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>correct,<sp/>we<sp/>do<sp/>this...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wids<sp/>=<sp/><ref refid="ngram__model_8h_1a240c738781daa226a2fc13395dbdb514" kindref="member">ngram_iter_get</ref>(itor,<sp/>&amp;prob1,<sp/>&amp;bo_wt1);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams[wids[0]].<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l<sp/>=<sp/>prob1;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams[wids[0]].<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l<sp/>=<sp/>bo_wt1;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[0]]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(<ref refid="ngram__model_8h_1a96e36290a005c03464ea6c637ccde2f5" kindref="member">ngram_word</ref>(base,<sp/>wids[0]));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(newbase-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[0]],<sp/>wids[0]))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>wids[0])<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>word<sp/>in<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[0]]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#unigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&lt;<sp/>2)<sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>quantized<sp/>probability<sp/>table<sp/>for<sp/>bigrams<sp/>and</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(optionally)<sp/>trigrams.<sp/><sp/>Hesitate<sp/>to<sp/>use<sp/>the<sp/>&quot;sorted<sp/>list&quot;<sp/>thing</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>since<sp/>it<sp/>isn&apos;t<sp/>so<sp/>useful,<sp/>but<sp/>it&apos;s<sp/>there<sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>init_sorted_list(&amp;sorted_prob2);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_sorted_list(&amp;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_sorted_list(&amp;sorted_prob3);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>bigram<sp/>and<sp/>trigram<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbigram__s" kindref="compound">bigram_t</ref>));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref>));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref><sp/>=</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>((newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>+<sp/>1)<sp/>/<sp/>BG_SEG_SZ<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>bigrams<sp/>and<sp/>trigrams<sp/>have<sp/>to<sp/>be<sp/>contiguous<sp/>with<sp/>others</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>the<sp/>same<sp/>N-1-gram,<sp/>we<sp/>traverse<sp/>them<sp/>in<sp/>depth-first<sp/>order</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>build<sp/>the<sp/>bigram<sp/>and<sp/>trigram<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0];<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__iter__s" kindref="compound">ngram_iter_t</ref><sp/>*uitor;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcount<sp/>=<sp/>bgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>bigram<sp/>index<sp/>(same<sp/>as<sp/>next<sp/>if<sp/>no<sp/>bigrams...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams[i].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref><sp/>=<sp/>bgcount;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1af46f94d0e21f22f1153f8f1cd9a372d6" kindref="member">E_DEBUG</ref>(2,<sp/>(</highlight><highlight class="stringliteral">&quot;unigram<sp/>%d:<sp/>%s<sp/>=&gt;<sp/>bigram<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],<sp/>bgcount));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>bigrams<sp/>corresponding<sp/>to<sp/>unigram<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uitor<sp/>=<sp/><ref refid="ngram__model_8h_1a461c6e5914ce463422dfeaeee377e024" kindref="member">ngram_ng_iter</ref>(base,<sp/>i,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor<sp/>=<sp/><ref refid="ngram__model_8h_1ae85f41e2defc5b65b12026d29cd4fdaa" kindref="member">ngram_iter_successors</ref>(uitor);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor;<sp/>++bgptr,<sp/>itor<sp/>=<sp/><ref refid="ngram__model_8h_1a3a2b285c01393b3ebddaec1fefed11a4" kindref="member">ngram_iter_next</ref>(itor))<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>prob2,<sp/>bo_wt2;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*wids;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__iter__s" kindref="compound">ngram_iter_t</ref><sp/>*titor;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wids<sp/>=<sp/><ref refid="ngram__model_8h_1a240c738781daa226a2fc13395dbdb514" kindref="member">ngram_iter_get</ref>(itor,<sp/>&amp;prob2,<sp/>&amp;bo_wt2);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(bgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams<sp/>&lt;<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1af66faad954d56f5ceaf6ba47cdcd9b1f" kindref="member">wid</ref><sp/>=<sp/>wids[1];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a769b8a54f864ac4844e37cfa17ed1af0" kindref="member">prob2</ref><sp/>=<sp/>sorted_id(&amp;sorted_prob2,<sp/>&amp;prob2);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgcount<sp/>=<sp/>(tgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcount<sp/>=<sp/>(bgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Backoff<sp/>weight<sp/>(only<sp/>if<sp/>there<sp/>are<sp/>trigrams...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a410991054e81251285cbc209964cdaf4" kindref="member">bo_wt2</ref><sp/>=<sp/>sorted_id(&amp;sorted_bo_wt2,<sp/>&amp;bo_wt2);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>bigram<sp/>segment<sp/>for<sp/>this<sp/>bigram<sp/>(this<sp/>isn&apos;t</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>used<sp/>unless<sp/>there<sp/>are<sp/>trigrams)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>bgcount<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>just<sp/>crossed<sp/>a<sp/>bigram<sp/>segment<sp/>boundary,<sp/>then</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>point<sp/>tseg_base<sp/>for<sp/>the<sp/>new<sp/>segment<sp/>to<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>trigram<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>!=<sp/>(bgcount<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[seg]<sp/>=<sp/>tgcount;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>calculate<sp/>the<sp/>trigram<sp/>offset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=<sp/>tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[seg];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1af46f94d0e21f22f1153f8f1cd9a372d6" kindref="member">E_DEBUG</ref>(2,<sp/>(</highlight><highlight class="stringliteral">&quot;bigram<sp/>%d<sp/>%s<sp/>%s<sp/>=&gt;<sp/>trigram<sp/>%d:%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcount,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[0]],</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[1]],</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg,<sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref>));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>fill<sp/>in<sp/>successors&apos;<sp/>trigram<sp/>info.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(titor<sp/>=<sp/><ref refid="ngram__model_8h_1ae85f41e2defc5b65b12026d29cd4fdaa" kindref="member">ngram_iter_successors</ref>(itor);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>titor;<sp/>++tgptr,<sp/>titor<sp/>=<sp/><ref refid="ngram__model_8h_1a3a2b285c01393b3ebddaec1fefed11a4" kindref="member">ngram_iter_next</ref>(titor))<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>prob3,<sp/>dummy;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams<sp/>&lt;<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wids<sp/>=<sp/><ref refid="ngram__model_8h_1a240c738781daa226a2fc13395dbdb514" kindref="member">ngram_iter_get</ref>(titor,<sp/>&amp;prob3,<sp/>&amp;dummy);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr-&gt;<ref refid="structtrigram__s_1a492e1fedb16fa11d26a941177c1305be" kindref="member">wid</ref><sp/>=<sp/>wids[2];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr-&gt;<ref refid="structtrigram__s_1a52f3fad42f7c653a469af0c1b75988a9" kindref="member">prob3</ref><sp/>=<sp/>sorted_id(&amp;sorted_prob3,<sp/>&amp;prob3);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1af46f94d0e21f22f1153f8f1cd9a372d6" kindref="member">E_DEBUG</ref>(2,<sp/>(</highlight><highlight class="stringliteral">&quot;trigram<sp/>%d<sp/>%s<sp/>%s<sp/>%s<sp/>=&gt;<sp/>prob<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgcount,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[0]],</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[1]],</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newbase-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[2]],</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr-&gt;<ref refid="structtrigram__s_1a52f3fad42f7c653a469af0c1b75988a9" kindref="member">prob3</ref>));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1ac9f746c8a5db78ef8b2fb7c312be4a22" kindref="member">ngram_iter_free</ref>(uitor);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>sentinal<sp/>unigram<sp/>and<sp/>bigram<sp/>records.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>bgcount<sp/>=<sp/>bgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>tgcount<sp/>=<sp/>tgptr<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>bgcount<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>!=<sp/>(bgcount<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[seg]<sp/>=<sp/>tgcount;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams[i].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref><sp/>=<sp/>bgcount;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=<sp/>tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[seg];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>create<sp/>probability<sp/>tables.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref><sp/>=<sp/>sorted_prob2.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref><sp/>=<sp/>vals_in_sorted_list(&amp;sorted_prob2);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#bigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#prob2<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>free_sorted_list(&amp;sorted_prob2);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>trigram<sp/>bo-wts<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref><sp/>=<sp/>sorted_bo_wt2.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref><sp/>=<sp/>vals_in_sorted_list(&amp;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_sorted_list(&amp;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#bo_wt2<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>trigram<sp/>probability<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref><sp/>=<sp/>sorted_prob3.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref><sp/>=<sp/>vals_in_sorted_list(&amp;sorted_prob3);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#trigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#prob3<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_sorted_list(&amp;sorted_prob3);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>tginfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a9be0c8197334e3ef632e9e3abdad6a4f" kindref="member">tginfo</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(newbase-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a2c96ba8aa34632e4d42908f9384d1b01" kindref="member">le</ref><sp/>=<sp/><ref refid="listelem__alloc_8h_1a4b08b49eaa74cbe9a3c95170cee78de7" kindref="member">listelem_alloc_init</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref>));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">fwrite_int32(FILE<sp/>*fh,<sp/>int32<sp/>val)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal">fwrite_ug(FILE<sp/>*fh,<sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*ug,<sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*lmath)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bogus<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>log10val;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bogus<sp/>dictionary<sp/>mapping<sp/>field.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;bogus,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>values<sp/>to<sp/>log10.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>log10val<sp/>=<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(lmath,<sp/>ug-&gt;<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;log10val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>log10val<sp/>=<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(lmath,<sp/>ug-&gt;<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;log10val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>ug-&gt;<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">fwrite_bg(FILE<sp/>*fh,<sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bg)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(bg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bg),<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">fwrite_tg(FILE<sp/>*fh,<sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*tg)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(tg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tg),<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*fmtdesc[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BEGIN<sp/>FILE<sp/>FORMAT<sp/>DESCRIPTION&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Header<sp/>string<sp/>length<sp/>(int32)<sp/>and<sp/>string<sp/>(including<sp/>trailing<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Original<sp/>LM<sp/>filename<sp/>string-length<sp/>(int32)<sp/>and<sp/>filename<sp/>(including<sp/>trailing<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>version<sp/>number<sp/>(present<sp/>iff<sp/>value<sp/>&lt;=<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>original<sp/>LM<sp/>file<sp/>modification<sp/>timestamp<sp/>(iff<sp/>version#<sp/>present)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>string-length<sp/>and<sp/>string<sp/>(including<sp/>trailing<sp/>0)<sp/>(iff<sp/>version#<sp/>present)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;...<sp/>previous<sp/>entry<sp/>continued<sp/>any<sp/>number<sp/>of<sp/>times<sp/>(iff<sp/>version#<sp/>present)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>0<sp/>(terminating<sp/>sequence<sp/>of<sp/>strings)<sp/>(iff<sp/>version#<sp/>present)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>log_bg_seg_sz<sp/>(present<sp/>iff<sp/>different<sp/>from<sp/>default<sp/>value<sp/>of<sp/>LOG2_BG_SEG_SZ)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.ucount<sp/>(must<sp/>be<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.bcount&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.tcount&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lm_t.ucount+1<sp/>unigrams<sp/>(including<sp/>sentinel)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lm_t.bcount+1<sp/>bigrams<sp/>(including<sp/>sentinel<sp/>64<sp/>bits<sp/>(bg_t)<sp/>each<sp/>if<sp/>version=-1/-2,<sp/>128<sp/>bits<sp/>(bg32_t)<sp/>each<sp/>if<sp/>version=-3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lm_t.tcount<sp/>trigrams<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0<sp/>32<sp/>bits<sp/>(tg_t)<sp/>each<sp/>if<sp/>version=-1/-2,<sp/>64<sp/>bits<sp/>(tg32_t)<sp/>each<sp/>if<sp/>version=-3)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.n_prob2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.prob2[]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.n_bo_wt2<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.bo_wt2[]<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.n_prob3<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.prob3[]<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>(lm_t.bcount+1)/BG_SEG_SZ+1<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>lm_t.tseg_base[]<sp/>(present<sp/>iff<sp/>lm_t.tcount<sp/>&gt;<sp/>0)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(int32)<sp/>Sum(all<sp/>word<sp/>string-lengths,<sp/>including<sp/>trailing<sp/>0<sp/>for<sp/>each)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;All<sp/>word<sp/>strings<sp/>(including<sp/>trailing<sp/>0<sp/>for<sp/>each)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;END<sp/>FILE<sp/>FORMAT<sp/>DESCRIPTION&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="712"><highlight class="normal">};</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">ngram_model_dmp_write_header(FILE<sp/>*<sp/>fh)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>k;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>strlen(darpa_hdr)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>k);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(darpa_hdr,<sp/>1,<sp/>k,<sp/>fh);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">ngram_model_dmp_write_lm_filename(FILE<sp/>*<sp/>fh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lmfile)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>k;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>strlen(lmfile)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>k);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(lmfile,<sp/>1,<sp/>k,<sp/>fh);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LMDMP_VERSION_TG_16BIT<sp/>-1<sp/></highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor">static<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">ngram_model_dmp_write_version(FILE<sp/>*<sp/>fh,<sp/>int32<sp/>mtime)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>LMDMP_VERSION_TG_16BIT);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>#<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>mtime);</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">ngram_model_dmp_write_ngram_counts(FILE<sp/>*<sp/>fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]);</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">ngram_model_dmp_write_fmtdesc(FILE<sp/>*<sp/>fh)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>k;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>file<sp/>format<sp/>description<sp/>into<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>fmtdesc[i]<sp/>!=<sp/>NULL;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>strlen(fmtdesc[i])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>k);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(fmtdesc[i],<sp/>1,<sp/>k,<sp/>fh);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>it<sp/>out<sp/>in<sp/>order<sp/>to<sp/>achieve<sp/>32-bit<sp/>alignment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>ftell(fh);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>pos<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>4-k);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;!!!!&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>4-k,<sp/>fh);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>0);</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">ngram_model_dmp_write_unigram(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_ug(fh,<sp/>&amp;(lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams[i]),<sp/>model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">ngram_model_dmp_write_bigram(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_bg(fh,<sp/>&amp;(lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams[i]));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal">ngram_model_dmp_write_trigram(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_tg(fh,<sp/>&amp;(lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams[i]));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal">ngram_model_dmp_write_bgprob(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>log10val<sp/>=<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>[i].l);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;log10val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">ngram_model_dmp_write_tgbowt(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>log10val<sp/>=<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>[i].l);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;log10val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal">ngram_model_dmp_write_tgprob(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>log10val<sp/>=<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>[i].l);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;log10val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">ngram_model_dmp_write_tg_segbase(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*lm<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)model;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>k;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>+<sp/>1)<sp/>/<sp/>BG_SEG_SZ<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>k);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>lm-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[i]);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">ngram_model_dmp_write_wordstr(FILE<sp/>*fh,<sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>k;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0];<sp/>i++)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>strlen(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite_int32(fh,<sp/>k);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0];<sp/>i++)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],<sp/>1,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i])<sp/>+<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">ngram_model_dmp_write(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*model;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*newbase;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>construct<sp/>a<sp/>DMP<sp/>model<sp/>from<sp/>the<sp/>base<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>ngram_model_dmp_build(base);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>newbase<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__dmp__s_1afd4571dc9702255aed667b5de62e5332" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>write<sp/>it,<sp/>confident<sp/>in<sp/>the<sp/>knowledge<sp/>that<sp/>it&apos;s<sp/>the<sp/>right</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>kind<sp/>of<sp/>language<sp/>model<sp/>internally.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_header(fh);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_lm_filename(fh,<sp/>file_name);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_version(fh,<sp/>0);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_fmtdesc(fh);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_ngram_counts(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_unigram(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_bigram(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_trigram(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_bgprob(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbase-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_tgbowt(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_tgprob(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_dmp_write_tg_segbase(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_write_wordstr(fh,<sp/>newbase);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(newbase);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal">ngram_model_dmp_apply_weights(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,<sp/>float32<sp/>lw,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>wip,<sp/>float32<sp/>uw)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*model<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_apply_weights(base,<sp/>&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>,<sp/>lw,<sp/>wip,<sp/>uw);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lousy<sp/>&quot;templating&quot;<sp/>for<sp/>things<sp/>that<sp/>are<sp/>largely<sp/>the<sp/>same<sp/>in<sp/>DMP<sp/>and</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*<sp/>ARPA<sp/>models,<sp/>except<sp/>for<sp/>the<sp/>bigram<sp/>and<sp/>trigram<sp/>types<sp/>and<sp/>some</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*<sp/>names.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NGRAM_MODEL_TYPE<sp/>ngram_model_dmp_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lm3g_templates.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal">ngram_model_dmp_free(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*model<sp/>=<sp/>(<ref refid="structngram__model__dmp__s" kindref="compound">ngram_model_dmp_t</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.unigrams);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__dmp__s_1ae86e39a2c9e3078f0d9cffc6cf384702" kindref="member">dump_mmap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a341a9c1cc8a3c4bddfd2d29a1b0993f6" kindref="member">mmio_file_unmap</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1ae86e39a2c9e3078f0d9cffc6cf384702" kindref="member">dump_mmap</ref>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.bigrams);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.trigrams);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_tginfo_free(base,<sp/>&amp;model-&gt;<ref refid="structngram__model__dmp__s_1af889dddcba4b473e782f4a5a11ca47bd" kindref="member">lm3g</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_dmp_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_free,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_dmp_apply_weights,<sp/></highlight><highlight class="comment">/*<sp/>apply_weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_score,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_raw_score,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>raw_score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_add_ug,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add_ug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_flush,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_mgrams,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mgrams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_successors,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>successors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_get,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_next,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_dmp.c"/>
  </compounddef>
</doxygen>
