<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="ngram__model__arpa_8c" kind="file" language="C++">
    <compoundname>ngram_model_arpa.c</compoundname>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="pio_8h" local="yes">sphinxbase/pio.h</includes>
    <includes refid="listelem__alloc_8h" local="yes">sphinxbase/listelem_alloc.h</includes>
    <includes refid="strfuncs_8h" local="yes">sphinxbase/strfuncs.h</includes>
    <includes refid="ngram__model__arpa_8h" local="yes">ngram_model_arpa.h</includes>
    <includes refid="lm3g__templates_8c" local="yes">lm3g_templates.c</includes>
    <incdepgraph>
      <node id="1800">
        <label>sys/stat.h</label>
      </node>
      <node id="1812">
        <label>lm3g_templates.c</label>
        <link refid="lm3g__templates_8c_source"/>
        <childnode refid="1794" relation="include">
        </childnode>
      </node>
      <node id="1799">
        <label>sphinxbase/pio.h</label>
        <link refid="pio_8h"/>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1796">
        <label>stdarg.h</label>
      </node>
      <node id="1794">
        <label>assert.h</label>
      </node>
      <node id="1805">
        <label>sphinxbase/ngram_model.h</label>
        <link refid="ngram__model_8h"/>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
      </node>
      <node id="1787">
        <label>stdlib.h</label>
      </node>
      <node id="1788">
        <label>setjmp.h</label>
      </node>
      <node id="1809">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
      </node>
      <node id="1798">
        <label>errno.h</label>
      </node>
      <node id="1786">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1793">
        <label>limits.h</label>
      </node>
      <node id="1810">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1791">
        <label>sphinx_config.h</label>
      </node>
      <node id="1792">
        <label>string.h</label>
      </node>
      <node id="1808">
        <label>sphinxbase/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
      </node>
      <node id="1811">
        <label>lm3g_model.h</label>
        <link refid="lm3g__model_8h_source"/>
        <childnode refid="1801" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
      </node>
      <node id="1795">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
      </node>
      <node id="1807">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
      </node>
      <node id="1790">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1791" relation="include">
        </childnode>
      </node>
      <node id="1802">
        <label>sphinxbase/strfuncs.h</label>
        <link refid="strfuncs_8h"/>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1789">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1806">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1785">
        <label>src/libsphinxbase/lm/ngram_model_arpa.c</label>
        <link refid="ngram_model_arpa.c"/>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
        <childnode refid="1802" relation="include">
        </childnode>
        <childnode refid="1803" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
      </node>
      <node id="1803">
        <label>ngram_model_arpa.h</label>
        <link refid="ngram__model__arpa_8h_source"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
      </node>
      <node id="1797">
        <label>stdio.h</label>
      </node>
      <node id="1801">
        <label>sphinxbase/listelem_alloc.h</label>
        <link refid="listelem__alloc_8h"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1804">
        <label>ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ngram__model__arpa_8c_1a4e841036a9698f67d4e328b7f0889c56" prot="public" static="no">
        <name>TSEG_BASE</name>
        <param><defname>m</defname></param>
        <param><defname>b</defname></param>
        <initializer>((m)-&gt;lm3g.tseg_base[(b)&gt;&gt;LOG_BG_SEG_SZ])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="57" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__arpa_8c_1ae6163bc1d8bd35e117a0155940e5fa68" prot="public" static="no">
        <name>FIRST_BG</name>
        <param><defname>m</defname></param>
        <param><defname>u</defname></param>
        <initializer>((m)-&gt;lm3g.unigrams[u].bigrams)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="58" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__arpa_8c_1af7f50fc4f451973a32e133d645c3df88" prot="public" static="no">
        <name>FIRST_TG</name>
        <param><defname>m</defname></param>
        <param><defname>b</defname></param>
        <initializer>(TSEG_BASE((m),(b))+((m)-&gt;lm3g.bigrams[b].trigrams))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="59" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__model__arpa_8c_1a6f477decab5cb1607fc77aa1b596a388" prot="public" static="no">
        <name>NGRAM_MODEL_TYPE</name>
        <initializer><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="630" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ngram__model__arpa_8c_1a7802937603a48820ee81bb59254d3e3f" prot="public" static="yes" mutable="no">
        <type><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref></type>
        <definition>static ngram_funcs_t ngram_model_arpa_funcs</definition>
        <argsstring></argsstring>
        <name>ngram_model_arpa_funcs</name>
        <initializer>= {
    ngram_model_arpa_free,          
    ngram_model_arpa_apply_weights, 
    lm3g_template_score,            
    lm3g_template_raw_score,        
    lm3g_template_add_ug,           
    lm3g_template_flush,            
    lm3g_template_iter,             
    lm3g_template_mgrams,           
    lm3g_template_successors,       
    lm3g_template_iter_get,         
    lm3g_template_iter_next,        
    lm3g_template_iter_free         
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="55" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__model__arpa_8c_1a602e5e21ebb8ad9b66656a3e8e8fc253" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ReadNgramCounts</definition>
        <argsstring>(lineiter_t **li, int32 *n_ug, int32 *n_bg, int32 *n_tg)</argsstring>
        <name>ReadNgramCounts</name>
        <param>
          <type><ref refid="structlineiter__t" kindref="compound">lineiter_t</ref> **</type>
          <declname>li</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_ug</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_bg</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="65" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="65" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1ada841547ff7301ce1494771ea068489b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ReadUnigrams</definition>
        <argsstring>(lineiter_t **li, ngram_model_arpa_t *model)</argsstring>
        <name>ReadUnigrams</name>
        <param>
          <type><ref refid="structlineiter__t" kindref="compound">lineiter_t</ref> **</type>
          <declname>li</declname>
        </param>
        <param>
          <type><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="129" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="129" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1aaaa3af31877f527a297a47653628727a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ReadBigrams</definition>
        <argsstring>(lineiter_t **li, ngram_model_arpa_t *model)</argsstring>
        <name>ReadBigrams</name>
        <param>
          <type><ref refid="structlineiter__t" kindref="compound">lineiter_t</ref> **</type>
          <declname>li</declname>
        </param>
        <param>
          <type><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="189" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="189" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1a2ae86990ff38b7eb4198f0fe31de1aef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ReadTrigrams</definition>
        <argsstring>(lineiter_t **li, ngram_model_arpa_t *model)</argsstring>
        <name>ReadTrigrams</name>
        <param>
          <type><ref refid="structlineiter__t" kindref="compound">lineiter_t</ref> **</type>
          <declname>li</declname>
        </param>
        <param>
          <type><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="284" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="284" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1a0cce50a3be8111203ad24e62d695857b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structunigram__s" kindref="compound">unigram_t</ref> *</type>
        <definition>static unigram_t* new_unigram_table</definition>
        <argsstring>(int32 n_ug)</argsstring>
        <name>new_unigram_table</name>
        <param>
          <type>int32</type>
          <declname>n_ug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="437" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="437" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1a4bdbd78887062c82c72ee6203f5f5625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_arpa_read</definition>
        <argsstring>(cmd_ln_t *config, const char *file_name, logmath_t *lmath)</argsstring>
        <name>ngram_model_arpa_read</name>
        <param>
          <type><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <briefdescription>
<para>Read an N-Gram model from an ARPABO text file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="451" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="451" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1ab5af29d1ce11bacd458de5d4b1a9a8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_arpa_write</definition>
        <argsstring>(ngram_model_t *model, const char *file_name)</argsstring>
        <name>ngram_model_arpa_write</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Write an N-Gram model to an ARPABO text file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="572" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="572" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1ac68a77ff49f8c6e8b061c8397f8d9e9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_model_arpa_apply_weights</definition>
        <argsstring>(ngram_model_t *base, float32 lw, float32 wip, float32 uw)</argsstring>
        <name>ngram_model_arpa_apply_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lw</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>wip</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>uw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="619" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="619" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__arpa_8c_1a6deb66648d3952cf7cfb36a229e8e88d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_arpa_free</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_arpa_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" line="634" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c" bodystart="634" bodyend="645"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2007<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>\file<sp/>ngram_model_arpa.c<sp/>ARPA<sp/>format<sp/>language<sp/>models</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Author:<sp/>David<sp/>Huggins-Daines<sp/>&lt;dhuggins@cs.cmu.edu&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pio_8h" kindref="compound">sphinxbase/pio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listelem__alloc_8h" kindref="compound">sphinxbase/listelem_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strfuncs_8h" kindref="compound">sphinxbase/strfuncs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngram_model_arpa.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_arpa_funcs;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG_BASE(m,b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m)-&gt;lm3g.tseg_base[(b)&gt;&gt;LOG_BG_SEG_SZ])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_BG(m,u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m)-&gt;lm3g.unigrams[u].bigrams)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_TG(m,b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TSEG_BASE((m),(b))+((m)-&gt;lm3g.bigrams[b].trigrams))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Read<sp/>and<sp/>return<sp/>#unigrams,<sp/>#bigrams,<sp/>#trigrams<sp/>as<sp/>stated<sp/>in<sp/>input<sp/>file.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">ReadNgramCounts(<ref refid="structlineiter__t" kindref="compound">lineiter_t</ref><sp/>**li,<sp/>int32<sp/>*<sp/>n_ug,<sp/>int32<sp/>*<sp/>n_bg,<sp/>int32<sp/>*<sp/>n_tg)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ngram,<sp/>ngram_cnt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>file<sp/>until<sp/>past<sp/>the<sp/>&apos;\data\&apos;<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*li)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="strfuncs_8h_1ac36a095632a4f16cf4e0fbcdb01de5ad" kindref="member">string_trim</ref>((*li)-&gt;buf,<sp/><ref refid="strfuncs_8h_1ab5c9ca15770a4bd3047705762b815df9a4fcbb0fe16fa4aa48723ba3ba10c26dd" kindref="member">STRING_BOTH</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\data\\&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*li<sp/>==<sp/>NULL<sp/>||<sp/>strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\data\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>\\data\\<sp/>mark<sp/>in<sp/>LM<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>*n_ug<sp/>=<sp/>*n_bg<sp/>=<sp/>*n_tg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li)))<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;ngram<sp/>%d=%d&quot;</highlight><highlight class="normal">,<sp/>&amp;ngram,<sp/>&amp;ngram_cnt)<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ngram)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_ug<sp/>=<sp/>ngram_cnt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_bg<sp/>=<sp/>ngram_cnt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_tg<sp/>=<sp/>ngram_cnt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>ngram<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>ngram);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*li<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;EOF<sp/>while<sp/>reading<sp/>ngram<sp/>counts\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Position<sp/>iterator<sp/>to<sp/>the<sp/>unigrams<sp/>header<sp/>&apos;\1-grams:\&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li)))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="strfuncs_8h_1ac36a095632a4f16cf4e0fbcdb01de5ad" kindref="member">string_trim</ref>((*li)-&gt;buf,<sp/><ref refid="strfuncs_8h_1ab5c9ca15770a4bd3047705762b815df9a4fcbb0fe16fa4aa48723ba3ba10c26dd" kindref="member">STRING_BOTH</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\1-grams:&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*li<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1add0768056bee50c260c5623b4edd4038" kindref="member">E_ERROR_SYSTEM</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>\\1-grams:<sp/>mark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*n_ug<sp/>&lt;=<sp/>0)<sp/>||<sp/>(*n_bg<sp/>&lt;<sp/>0)<sp/>||<sp/>(*n_tg<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>or<sp/>missing<sp/>ngram<sp/>count\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>Read<sp/>in<sp/>the<sp/>unigrams<sp/>from<sp/>given<sp/>file<sp/>into<sp/>the<sp/>LM<sp/>structure<sp/>model.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>On<sp/>entry<sp/>to<sp/>this<sp/>procedure,<sp/>the<sp/>iterator<sp/>is<sp/>positioned<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>header<sp/>line<sp/>&apos;\1-grams:&apos;.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">ReadUnigrams(<ref refid="structlineiter__t" kindref="compound">lineiter_t</ref><sp/>**li,<sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1ab09caa709057492ca333e7349e006c5d" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wcnt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>unigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>wcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li)))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wptr[3],<sp/>*name;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>bo_wt<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="strfuncs_8h_1ac36a095632a4f16cf4e0fbcdb01de5ad" kindref="member">string_trim</ref>((*li)-&gt;buf,<sp/><ref refid="strfuncs_8h_1ab5c9ca15770a4bd3047705762b815df9a4fcbb0fe16fa4aa48723ba3ba10c26dd" kindref="member">STRING_BOTH</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\2-grams:&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\end\\&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/><ref refid="strfuncs_8h_1a5b520fdebcca599db86faaf75a82173f" kindref="member">str2words</ref>((*li)-&gt;buf,<sp/>wptr,<sp/>3))<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*li)-&gt;buf[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Format<sp/>error;<sp/>unigram<sp/>ignored:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(*li)-&gt;buf);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>(float)<ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[0]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>wptr[1];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo_wt<sp/>=<sp/>(float)<ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[2]);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcnt<sp/>&gt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>unigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Associate<sp/>name<sp/>with<sp/>word<sp/>id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wcnt]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(name);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="hash__table_8h_1aebfe63c3869c271b125a8413ee384412" kindref="member">hash_table_enter</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wcnt],<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)wcnt))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)wcnt)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>word<sp/>in<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wcnt]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[wcnt].<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>p1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[wcnt].<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>bo_wt);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcnt++;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]<sp/>!=<sp/>wcnt)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;lm_t.ucount(%d)<sp/>!=<sp/>#unigrams<sp/>read(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0],<sp/>wcnt);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]<sp/>=<sp/>wcnt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>=<sp/>wcnt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>Read<sp/>bigrams<sp/>from<sp/>given<sp/>file<sp/>into<sp/>given<sp/>model<sp/>structure.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">ReadBigrams(<ref refid="structlineiter__t" kindref="compound">lineiter_t</ref><sp/>**li,<sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1ab09caa709057492ca333e7349e006c5d" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w1,<sp/>w2,<sp/>prev_w1,<sp/>bgcount;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bgptr;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>bigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>bgcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_w1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li)))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>p,<sp/>bo_wt<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>p2,<sp/>bo_wt2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wptr[4],<sp/>*word1,<sp/>*word2;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="strfuncs_8h_1ac36a095632a4f16cf4e0fbcdb01de5ad" kindref="member">string_trim</ref>((*li)-&gt;buf,<sp/><ref refid="strfuncs_8h_1ab5c9ca15770a4bd3047705762b815df9a4fcbb0fe16fa4aa48723ba3ba10c26dd" kindref="member">STRING_BOTH</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wptr[3]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/><ref refid="strfuncs_8h_1a5b520fdebcca599db86faaf75a82173f" kindref="member">str2words</ref>((*li)-&gt;buf,<sp/>wptr,<sp/>4))<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*li)-&gt;buf[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(float32)<ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[0]);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word1<sp/>=<sp/>wptr[1];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word2<sp/>=<sp/>wptr[2];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wptr[3])</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo_wt<sp/>=<sp/>(float32)<ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[3]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w1<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(base,<sp/>word1))<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>word:<sp/>%s,<sp/>skipping<sp/>bigram<sp/>(%s<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word1,<sp/>word1,<sp/>word2);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w2<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(base,<sp/>word2))<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>word:<sp/>%s,<sp/>skipping<sp/>bigram<sp/>(%s<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word2,<sp/>word1,<sp/>word2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Should<sp/>use<sp/>logmath_t<sp/>quantization<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HACK!!<sp/>to<sp/>quantize<sp/>probs<sp/>to<sp/>4<sp/>decimal<sp/>digits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(float32)((int32)(p<sp/>*<sp/>10000))<sp/>/<sp/>10000;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo_wt<sp/>=<sp/>(float32)((int32)(bo_wt<sp/>*<sp/>10000))<sp/>/<sp/>10000;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo_wt2<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>bo_wt);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bgcount<sp/>&gt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>bigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1af66faad954d56f5ceaf6ba47cdcd9b1f" kindref="member">wid</ref><sp/>=<sp/>w2;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a769b8a54f864ac4844e37cfa17ed1af0" kindref="member">prob2</ref><sp/>=<sp/>sorted_id(&amp;model-&gt;sorted_prob2,<sp/>&amp;p2);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a410991054e81251285cbc209964cdaf4" kindref="member">bo_wt2</ref><sp/>=<sp/>sorted_id(&amp;model-&gt;sorted_bo_wt2,<sp/>&amp;bo_wt2);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w1<sp/>!=<sp/>prev_w1)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w1<sp/>&lt;<sp/>prev_w1)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Bigram<sp/>%s<sp/>%s<sp/>not<sp/>in<sp/>unigram<sp/>order<sp/>word<sp/>id:<sp/>%d<sp/>prev<sp/>word<sp/>id:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>word1,<sp/>word2,<sp/>w1,<sp/>prev_w1);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(prev_w1++;<sp/>prev_w1<sp/>&lt;=<sp/>w1;<sp/>prev_w1++)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[prev_w1].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref><sp/>=<sp/>bgcount;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_w1<sp/>=<sp/>w1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcount++;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr++;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bgcount<sp/>&amp;<sp/>0x0000ffff)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*li<sp/>==<sp/>NULL<sp/>||<sp/>((strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\end\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\3-grams:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>bigram:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(*li)-&gt;buf);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(prev_w1++;<sp/>prev_w1<sp/>&lt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0];<sp/>prev_w1++)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[prev_w1].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref><sp/>=<sp/>bgcount;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>Very<sp/>similar<sp/>to<sp/>ReadBigrams.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">ReadTrigrams(<ref refid="structlineiter__t" kindref="compound">lineiter_t</ref><sp/>**li,<sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1ab09caa709057492ca333e7349e006c5d" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w1,<sp/>w2,<sp/>w3,<sp/>prev_w1,<sp/>prev_w2,<sp/>tgcount,<sp/>prev_bg,<sp/>bg,<sp/>endbg;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>seg,<sp/>prev_seg,<sp/>prev_seg_lastbg;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*tgptr;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bgptr;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>trigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>tgcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>tgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.trigrams;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_w1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_w2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_bg<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_seg<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*li<sp/>=<sp/><ref refid="pio_8h_1aff8df0b6928746d61b3520555263f71e" kindref="member">lineiter_next</ref>(*li)))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>p;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>p3;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wptr[4],<sp/>*word1,<sp/>*word2,<sp/>*word3;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="strfuncs_8h_1ac36a095632a4f16cf4e0fbcdb01de5ad" kindref="member">string_trim</ref>((*li)-&gt;buf,<sp/><ref refid="strfuncs_8h_1ab5c9ca15770a4bd3047705762b815df9a4fcbb0fe16fa4aa48723ba3ba10c26dd" kindref="member">STRING_BOTH</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="strfuncs_8h_1a5b520fdebcca599db86faaf75a82173f" kindref="member">str2words</ref>((*li)-&gt;buf,<sp/>wptr,<sp/>4)<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*li)-&gt;buf[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(float32)<ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[0]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word1<sp/>=<sp/>wptr[1];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word2<sp/>=<sp/>wptr[2];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word3<sp/>=<sp/>wptr[3];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w1<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(base,<sp/>word1))<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>word:<sp/>%s,<sp/>skipping<sp/>trigram<sp/>(%s<sp/>%s<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word1,<sp/>word1,<sp/>word2,<sp/>word3);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w2<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(base,<sp/>word2))<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>word:<sp/>%s,<sp/>skipping<sp/>trigram<sp/>(%s<sp/>%s<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word2,<sp/>word1,<sp/>word2,<sp/>word3);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w3<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(base,<sp/>word3))<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>word:<sp/>%s,<sp/>skipping<sp/>trigram<sp/>(%s<sp/>%s<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word3,<sp/>word1,<sp/>word2,<sp/>word3);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Should<sp/>use<sp/>logmath_t<sp/>quantization<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HACK!!<sp/>to<sp/>quantize<sp/>probs<sp/>to<sp/>4<sp/>decimal<sp/>digits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(float32)((int32)(p<sp/>*<sp/>10000))<sp/>/<sp/>10000;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/><ref refid="logmath_8h_1aacb4dddeed63a61fb927915f7e3a642e" kindref="member">logmath_log10_to_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tgcount<sp/>&gt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2])<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>trigrams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr-&gt;<ref refid="structtrigram__s_1a492e1fedb16fa11d26a941177c1305be" kindref="member">wid</ref><sp/>=<sp/>w3;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr-&gt;<ref refid="structtrigram__s_1a52f3fad42f7c653a469af0c1b75988a9" kindref="member">prob3</ref><sp/>=<sp/>sorted_id(&amp;model-&gt;sorted_prob3,<sp/>&amp;p3);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w1<sp/>!=<sp/>prev_w1)<sp/>||<sp/>(w2<sp/>!=<sp/>prev_w2))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigram<sp/>for<sp/>a<sp/>new<sp/>bigram;<sp/>update<sp/>tg<sp/>info<sp/>for<sp/>all<sp/>previous<sp/>bigrams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w1<sp/>&lt;<sp/>prev_w1)<sp/>||<sp/>((w1<sp/>==<sp/>prev_w1)<sp/>&amp;&amp;<sp/>(w2<sp/>&lt;<sp/>prev_w2)))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Trigrams<sp/>not<sp/>in<sp/>bigram<sp/>order\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg<sp/>=<sp/>(w1<sp/>!=</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_w1)<sp/>?<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[w1].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref><sp/>:<sp/>prev_bg<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endbg<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams[w1<sp/>+<sp/>1].<ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams<sp/>+<sp/>bg;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(;<sp/>(bg<sp/>&lt;<sp/>endbg)<sp/>&amp;&amp;<sp/>(bgptr-&gt;<ref refid="structbigram__s_1af66faad954d56f5ceaf6ba47cdcd9b1f" kindref="member">wid</ref><sp/>!=<sp/>w2);<sp/>bg++,<sp/>bgptr++);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg<sp/>&gt;=<sp/>endbg)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>bigram<sp/>for<sp/>trigram:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>(*li)-&gt;buf);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bg<sp/>=<sp/>bigram<sp/>entry<sp/>index<sp/>for<sp/>&lt;w1,w2&gt;.<sp/><sp/>Update<sp/>tseg_base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>bg<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>prev_seg<sp/>+<sp/>1;<sp/>i<sp/>&lt;=<sp/>seg;<sp/>i++)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[i]<sp/>=<sp/>tgcount;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>trigrams<sp/>pointers<sp/>for<sp/>all<sp/>bigrams<sp/>until<sp/>bg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(prev_seg<sp/>&lt;<sp/>seg)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tgoff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_seg<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgoff<sp/>=<sp/>tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[prev_seg];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tgoff<sp/>&gt;<sp/>65535)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>trigram<sp/>segment<sp/>is<sp/>bigger<sp/>than<sp/>65535,<sp/>such<sp/>a<sp/>big<sp/>language<sp/>models<sp/>are<sp/>not<sp/>supported,<sp/>use<sp/>smaller<sp/>vocabulary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_seg_lastbg<sp/>=<sp/>((prev_seg<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/>LOG_BG_SEG_SZ)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams<sp/>+<sp/>prev_bg;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++prev_bg,<sp/>++bgptr;<sp/>prev_bg<sp/>&lt;=<sp/>prev_seg_lastbg;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_bg++,<sp/>bgptr++)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=<sp/>tgoff;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(;<sp/>prev_bg<sp/>&lt;=<sp/>bg;<sp/>prev_bg++,<sp/>bgptr++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tgoff;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgoff<sp/>=<sp/>tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[prev_seg];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tgoff<sp/>&gt;<sp/>65535)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>trigram<sp/>segment<sp/>is<sp/>bigger<sp/>than<sp/>65535,<sp/>such<sp/>a<sp/>big<sp/>language<sp/>models<sp/>are<sp/>not<sp/>supported,<sp/>use<sp/>smaller<sp/>vocabulary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams<sp/>+<sp/>prev_bg;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++prev_bg,<sp/>++bgptr;<sp/>prev_bg<sp/>&lt;=<sp/>bg;<sp/>prev_bg++,<sp/>bgptr++)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgptr-&gt;<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=<sp/>tgoff;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_w1<sp/>=<sp/>w1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_w2<sp/>=<sp/>w2;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_bg<sp/>=<sp/>bg;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_seg<sp/>=<sp/>seg;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgcount++;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgptr++;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tgcount<sp/>&amp;<sp/>0x0000ffff)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*li<sp/>==<sp/>NULL<sp/>||<sp/>strcmp((*li)-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;\\end\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>trigram:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(*li)-&gt;buf);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(prev_bg++;<sp/>prev_bg<sp/>&lt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1];<sp/>prev_bg++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((prev_bg<sp/>&amp;<sp/>(BG_SEG_SZ<sp/>-<sp/>1))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[prev_bg<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ]<sp/>=<sp/>tgcount;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[prev_bg<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ])<sp/>&gt;<sp/>65535)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>trigram<sp/>segment<sp/>is<sp/>bigger<sp/>than<sp/>65535,<sp/>such<sp/>a<sp/>big<sp/>language<sp/>models<sp/>are<sp/>not<sp/>supported,<sp/>use<sp/>smaller<sp/>vocabulary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams[prev_bg].<ref refid="structbigram__s_1a11c1cb1d7c40de624f09c372b36a6857" kindref="member">trigrams</ref><sp/>=</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgcount<sp/>-<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>[prev_bg<sp/>&gt;&gt;<sp/>LOG_BG_SEG_SZ];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*</highlight></codeline>
<codeline lineno="437"><highlight class="normal">new_unigram_table(int32<sp/>n_ug)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*table;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_ug,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structunigram__s" kindref="compound">unigram_t</ref>));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_ug;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[i].<ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>.l<sp/>=<sp/>INT_MIN;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[i].<ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>.l<sp/>=<sp/>INT_MIN;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="451"><highlight class="normal">ngram_model_arpa_read(<ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*config,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*lmath)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlineiter__t" kindref="compound">lineiter_t</ref><sp/>*li;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>is_pipe;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_unigram;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_bigram;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_trigram;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*model;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/><ref refid="pio_8h_1aa3d71506049eb49cf03eff1b89ef281f" kindref="member">fopen_comp</ref>(file_name,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>&amp;is_pipe))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>li<sp/>=<sp/><ref refid="pio_8h_1a22d0125ab198f02f8bbe543417d99566" kindref="member">lineiter_start</ref>(fp);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>#unigrams,<sp/>#bigrams,<sp/>#trigrams<sp/>from<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReadNgramCounts(&amp;li,<sp/>&amp;n_unigram,<sp/>&amp;n_bigram,<sp/>&amp;n_trigram)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a3f80e5d4d666426cef229dd41237d9cf" kindref="member">lineiter_free</ref>(li);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;ngrams<sp/>1=%d,<sp/>2=%d,<sp/>3=%d\n&quot;</highlight><highlight class="normal">,<sp/>n_unigram,<sp/>n_bigram,<sp/>n_trigram);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>LM,<sp/>including<sp/>initial<sp/>OOVs<sp/>and<sp/>placeholders;<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1ab09caa709057492ca333e7349e006c5d" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bigram<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>base<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_init(base,<sp/>&amp;ngram_model_arpa_funcs,<sp/>lmath,<sp/>n,<sp/>n_unigram);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]<sp/>=<sp/>n_unigram;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>=<sp/>n_bigram;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>=<sp/>n_trigram;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Allocate<sp/>one<sp/>extra<sp/>unigram<sp/>and<sp/>bigram<sp/>entry:<sp/>sentinels<sp/>to<sp/>terminate</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>followers<sp/>(bigrams<sp/>and<sp/>trigrams,<sp/>respectively)<sp/>of<sp/>previous<sp/>entry.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams<sp/>=<sp/>new_unigram_table(n_unigram<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams<sp/>=</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_bigram<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structbigram__s" kindref="compound">bigram_t</ref>));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.trigrams<sp/>=</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_trigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtrigram__s" kindref="compound">trigram_t</ref>));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_trigram<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref><sp/>=</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>((n_bigram<sp/>+<sp/>1)<sp/>/<sp/>BG_SEG_SZ<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReadUnigrams(&amp;li,<sp/>model)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(base);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#unigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_sorted_list(&amp;model-&gt;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_sorted_list(&amp;model-&gt;sorted_prob2);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReadBigrams(&amp;li,<sp/>model)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(base);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]<sp/>=<sp/>FIRST_BG(model,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref><sp/>=<sp/>model-&gt;sorted_prob2.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref><sp/>=<sp/>vals_in_sorted_list(&amp;model-&gt;sorted_prob2);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_sorted_list(&amp;model-&gt;sorted_prob2);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#bigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#prob2<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>trigram<sp/>bo-wts<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref><sp/>=<sp/>model-&gt;sorted_bo_wt2.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref><sp/>=<sp/>vals_in_sorted_list(&amp;model-&gt;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_sorted_list(&amp;model-&gt;sorted_bo_wt2);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#bo_wt2<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_sorted_list(&amp;model-&gt;sorted_prob3);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReadTrigrams(&amp;li,<sp/>model)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(base);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]<sp/>=<sp/>FIRST_TG(model,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[1]);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref><sp/>=<sp/>model-&gt;sorted_prob3.<ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref><sp/>=<sp/>vals_in_sorted_list(&amp;model-&gt;sorted_prob3);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#trigrams<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>base-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[2]);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;%8d<sp/>=<sp/>#prob3<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_sorted_list(&amp;model-&gt;sorted_prob3);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>tginfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a9be0c8197334e3ef632e9e3abdad6a4f" kindref="member">tginfo</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_unigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a2c96ba8aa34632e4d42908f9384d1b01" kindref="member">le</ref><sp/>=<sp/><ref refid="listelem__alloc_8h_1a4b08b49eaa74cbe9a3c95170cee78de7" kindref="member">listelem_alloc_init</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtginfo__s" kindref="compound">tginfo_t</ref>));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a3f80e5d4d666426cef229dd41237d9cf" kindref="member">lineiter_free</ref>(li);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">ngram_model_arpa_write(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__iter__s" kindref="compound">ngram_iter_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1add0768056bee50c260c5623b4edd4038" kindref="member">E_ERROR_SYSTEM</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>%s<sp/>for<sp/>writing&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>ARPA-format<sp/>language<sp/>model<sp/>file,<sp/>generated<sp/>by<sp/>CMU<sp/>Sphinx\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>ARPA<sp/>format<sp/>doesn&apos;t<sp/>require<sp/>any<sp/>extra<sp/>information<sp/>that</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>N-Gram<sp/>iterators<sp/>can&apos;t<sp/>give<sp/>us,<sp/>so<sp/>this<sp/>is<sp/>very</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>straightforward<sp/>compared<sp/>with<sp/>DMP<sp/>writing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>N-gram<sp/>counts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;\\data\\\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;ngram<sp/>%d=%d\n&quot;</highlight><highlight class="normal">,<sp/>i+1,<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[i]);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>N-grams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;\n\\%d-grams:\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor<sp/>=<sp/><ref refid="ngram__model_8h_1a12683dda2253dc45680102f02fbdb1e2" kindref="member">ngram_model_mgrams</ref>(model,<sp/>i);<sp/>itor;<sp/>itor<sp/>=<sp/><ref refid="ngram__model_8h_1a3a2b285c01393b3ebddaec1fefed11a4" kindref="member">ngram_iter_next</ref>(itor))<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*wids;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score,<sp/>bowt;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wids<sp/>=<sp/><ref refid="ngram__model_8h_1a240c738781daa226a2fc13395dbdb514" kindref="member">ngram_iter_get</ref>(itor,<sp/>&amp;score,<sp/>&amp;bowt);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%.4f<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>score));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>i;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wids[j]<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a9dcba9b49cc1cd189b257e5838da0eee" kindref="member">n_counts</ref>[0]);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wids[j]]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>model-&gt;n-1)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%.4f&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmath_8h_1a7c17cb624003975e84fbd141ca6e2e06" kindref="member">logmath_log_to_log10</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>bowt));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;\n\\end\\\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal">ngram_model_arpa_apply_weights(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,<sp/>float32<sp/>lw,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>wip,<sp/>float32<sp/>uw)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*model<sp/>=<sp/>(<ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_apply_weights(base,<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>,<sp/>lw,<sp/>wip,<sp/>uw);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lousy<sp/>&quot;templating&quot;<sp/>for<sp/>things<sp/>that<sp/>are<sp/>largely<sp/>the<sp/>same<sp/>in<sp/>DMP<sp/>and</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>ARPA<sp/>models,<sp/>except<sp/>for<sp/>the<sp/>bigram<sp/>and<sp/>trigram<sp/>types<sp/>and<sp/>some</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>names.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NGRAM_MODEL_TYPE<sp/>ngram_model_arpa_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lm3g_templates.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">ngram_model_arpa_free(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*model<sp/>=<sp/>(<ref refid="structngram__model__arpa__s" kindref="compound">ngram_model_arpa_t</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.unigrams);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.bigrams);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.trigrams);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_tginfo_free(base,<sp/>&amp;model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__arpa__s_1abe1aa64587afdcb6134c0efaad622e78" kindref="member">lm3g</ref>.<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_arpa_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_arpa_free,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_arpa_apply_weights,<sp/></highlight><highlight class="comment">/*<sp/>apply_weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_score,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_raw_score,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>raw_score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_add_ug,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add_ug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_flush,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_mgrams,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mgrams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_successors,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>successors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_get,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_next,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>lm3g_template_iter_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iter_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/ngram_model_arpa.c"/>
  </compounddef>
</doxygen>
