<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="lm3g__model_8h" kind="file" language="C++">
    <compoundname>lm3g_model.h</compoundname>
    <includes refid="listelem__alloc_8h" local="yes">sphinxbase/listelem_alloc.h</includes>
    <includes refid="ngram__model__internal_8h" local="yes">ngram_model_internal.h</includes>
    <includedby refid="lm3g__model_8c" local="yes">src/libsphinxbase/lm/lm3g_model.c</includedby>
    <includedby refid="ngram__model__arpa_8h" local="yes">src/libsphinxbase/lm/ngram_model_arpa.h</includedby>
    <includedby refid="ngram__model__dmp_8h" local="yes">src/libsphinxbase/lm/ngram_model_dmp.h</includedby>
    <includedby refid="ngram__model__set_8h" local="yes">src/libsphinxbase/lm/ngram_model_set.h</includedby>
    <incdepgraph>
      <node id="1739">
        <label>stdarg.h</label>
      </node>
      <node id="1738">
        <label>sphinxbase/ngram_model.h</label>
        <link refid="ngram__model_8h"/>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
        <childnode refid="1740" relation="include">
        </childnode>
        <childnode refid="1742" relation="include">
        </childnode>
        <childnode refid="1743" relation="include">
        </childnode>
      </node>
      <node id="1733">
        <label>stdlib.h</label>
      </node>
      <node id="1744">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
      </node>
      <node id="1745">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1733" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
      </node>
      <node id="1736">
        <label>sphinx_config.h</label>
      </node>
      <node id="1743">
        <label>sphinxbase/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="1734" relation="include">
        </childnode>
      </node>
      <node id="1731">
        <label>src/libsphinxbase/lm/lm3g_model.h</label>
        <link refid="lm3g_model.h"/>
        <childnode refid="1732" relation="include">
        </childnode>
        <childnode refid="1737" relation="include">
        </childnode>
      </node>
      <node id="1742">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
        <childnode refid="1740" relation="include">
        </childnode>
      </node>
      <node id="1735">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1736" relation="include">
        </childnode>
      </node>
      <node id="1734">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1740">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1741" relation="include">
        </childnode>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
      </node>
      <node id="1741">
        <label>stdio.h</label>
      </node>
      <node id="1732">
        <label>sphinxbase/listelem_alloc.h</label>
        <link refid="listelem__alloc_8h"/>
        <childnode refid="1733" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
      </node>
      <node id="1737">
        <label>ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="1738" relation="include">
        </childnode>
        <childnode refid="1744" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1751">
        <label>src/libsphinxbase/lm/ngram_model_dmp.c</label>
        <link refid="ngram__model__dmp_8c_source"/>
      </node>
      <node id="1750">
        <label>src/libsphinxbase/lm/ngram_model_dmp.h</label>
        <link refid="ngram__model__dmp_8h_source"/>
        <childnode refid="1751" relation="include">
        </childnode>
      </node>
      <node id="1753">
        <label>src/libsphinxbase/lm/ngram_model_set.c</label>
        <link refid="ngram__model__set_8c"/>
      </node>
      <node id="1752">
        <label>src/libsphinxbase/lm/ngram_model_set.h</label>
        <link refid="ngram__model__set_8h"/>
        <childnode refid="1753" relation="include">
        </childnode>
      </node>
      <node id="1747">
        <label>src/libsphinxbase/lm/lm3g_model.c</label>
        <link refid="lm3g__model_8c_source"/>
      </node>
      <node id="1746">
        <label>src/libsphinxbase/lm/lm3g_model.h</label>
        <link refid="lm3g_model.h"/>
        <childnode refid="1747" relation="include">
        </childnode>
        <childnode refid="1748" relation="include">
        </childnode>
        <childnode refid="1750" relation="include">
        </childnode>
        <childnode refid="1752" relation="include">
        </childnode>
      </node>
      <node id="1749">
        <label>src/libsphinxbase/lm/ngram_model_arpa.c</label>
        <link refid="ngram__model__arpa_8c_source"/>
      </node>
      <node id="1748">
        <label>src/libsphinxbase/lm/ngram_model_arpa.h</label>
        <link refid="ngram__model__arpa_8h_source"/>
        <childnode refid="1749" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="unionlmprob__t" prot="public">lmprob_t</innerclass>
    <innerclass refid="structsorted__entry__s" prot="public">sorted_entry_s</innerclass>
    <innerclass refid="structsorted__list__t" prot="public">sorted_list_t</innerclass>
    <innerclass refid="structunigram__s" prot="public">unigram_s</innerclass>
    <innerclass refid="structtginfo__s" prot="public">tginfo_s</innerclass>
    <innerclass refid="structlm3g__model__s" prot="public">lm3g_model_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lm3g__model_8h_1afda3087fc6a6d02d4db0e38c2884510d" prot="public" static="no">
        <name>BG_SEG_SZ</name>
        <initializer>512	/* chosen so that #trigram/segment &lt;= 2**16 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="119" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lm3g__model_8h_1a7bb26d5a4d12d3c0bbd9b8556e2af941" prot="public" static="no">
        <name>LOG_BG_SEG_SZ</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="120" column="9" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lm3g__model_8h_1ac275d89002d8a954664eeaeae803e240" prot="public" static="no">
        <type>struct <ref refid="structsorted__entry__s" kindref="compound">sorted_entry_s</ref></type>
        <definition>typedef struct sorted_entry_s  sorted_entry_t</definition>
        <argsstring></argsstring>
        <name>sorted_entry_t</name>
        <briefdescription>
<para>Bigram probs and bo-wts, and trigram probs are kept in separate tables rather than within the bigram_t and trigram_t structures. </para>        </briefdescription>
        <detaileddescription>
<para>These tables hold unique prob and bo-wt values. The following tree structure is used to construct these tables of unique values. Whenever a new value is read from the LM file, the sorted tree structure is searched to see if the value already exists, and inserted if not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="lm3g__model_8h_1a5d1ecf53bbe8af439e844d6fe21662f6" prot="public" static="no">
        <type>struct <ref refid="structunigram__s" kindref="compound">unigram_s</ref></type>
        <definition>typedef struct unigram_s  unigram_t</definition>
        <argsstring></argsstring>
        <name>unigram_t</name>
        <briefdescription>
<para>Unigram structure (common among all lm3g implementations) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="lm3g__model_8h_1a9ee92c11b7ebfa56d0b717d322ef37fc" prot="public" static="no">
        <type>struct <ref refid="structbigram__s" kindref="compound">bigram_s</ref></type>
        <definition>typedef struct bigram_s bigram_t</definition>
        <argsstring></argsstring>
        <name>bigram_t</name>
        <briefdescription>
<para>Bigram structure (might be implemented differently) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="210" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lm3g__model_8h_1ae7ae64d97464605cd169593a9c33fe4f" prot="public" static="no">
        <type>struct <ref refid="structtrigram__s" kindref="compound">trigram_s</ref></type>
        <definition>typedef struct trigram_s trigram_t</definition>
        <argsstring></argsstring>
        <name>trigram_t</name>
        <briefdescription>
<para>Trigram structure (might be implemented differently) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="210" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lm3g__model_8h_1a904ff11cf474b023ff2199517f3aee33" prot="public" static="no">
        <type>struct <ref refid="structtginfo__s" kindref="compound">tginfo_s</ref></type>
        <definition>typedef struct tginfo_s  tginfo_t</definition>
        <argsstring></argsstring>
        <name>tginfo_t</name>
        <briefdescription>
<para>Trigram information cache. </para>        </briefdescription>
        <detaileddescription>
<para>The following trigram information cache eliminates most traversals of 1g-&gt;2g-&gt;3g tree to locate trigrams for a given bigram (lw1,lw2). The organization is optimized for locality of access (to the same lw1), given lw2. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="lm3g__model_8h_1af1c477da36ddf574d499d6d9a61191f8" prot="public" static="no">
        <type>struct <ref refid="structlm3g__model__s" kindref="compound">lm3g_model_s</ref></type>
        <definition>typedef struct lm3g_model_s  lm3g_model_t</definition>
        <argsstring></argsstring>
        <name>lm3g_model_t</name>
        <briefdescription>
<para>Common internal structure for Sphinx 3-gram models. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="157" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lm3g__model_8h_1a0645810c02795ee366176ef5db5ba878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lm3g_tginfo_free</definition>
        <argsstring>(ngram_model_t *base, lm3g_model_t *lm3g)</argsstring>
        <name>lm3g_tginfo_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref> *</type>
          <declname>lm3g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="159" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="54" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1a35b7ec6dd9ad9ccec53a020cdfc5e05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lm3g_tginfo_reset</definition>
        <argsstring>(ngram_model_t *base, lm3g_model_t *lm3g)</argsstring>
        <name>lm3g_tginfo_reset</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref> *</type>
          <declname>lm3g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="160" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1aadc4b23a2a67ab9d68d12f2153727ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lm3g_apply_weights</definition>
        <argsstring>(ngram_model_t *base, lm3g_model_t *lm3g, float32 lw, float32 wip, float32 uw)</argsstring>
        <name>lm3g_apply_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref> *</type>
          <declname>lm3g</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lw</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>wip</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>uw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="161" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="73" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1acb275ff8152c5227c916ef0b2eb295ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 lm3g_add_ug</definition>
        <argsstring>(ngram_model_t *base, lm3g_model_t *lm3g, int32 wid, int32 lweight)</argsstring>
        <name>lm3g_add_ug</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref> *</type>
          <declname>lm3g</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>lweight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="164" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="135" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1ad7fd0ccfcb273cff9de88c8acae044fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_sorted_list</definition>
        <argsstring>(sorted_list_t *l)</argsstring>
        <name>init_sorted_list</name>
        <param>
          <type><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Initialize sorted list with the 0-th entry = MIN_PROB_F, which may be needed to replace spurious values in the Darpa LM file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="172" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="181" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1aa62b02d86be2e3f5384103b1d6829722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_sorted_list</definition>
        <argsstring>(sorted_list_t *l)</argsstring>
        <name>free_sorted_list</name>
        <param>
          <type><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="173" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1a9b50e0649bc69faa7e017764128e9659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref> *</type>
        <definition>lmprob_t* vals_in_sorted_list</definition>
        <argsstring>(sorted_list_t *l)</argsstring>
        <name>vals_in_sorted_list</name>
        <param>
          <type><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="174" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="198" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="lm3g__model_8h_1a7c7ad9ccc1f9c1ef41e5f9effb0a5398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 sorted_id</definition>
        <argsstring>(sorted_list_t *l, int32 *val)</argsstring>
        <name>sorted_id</name>
        <param>
          <type><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h" line="175" column="1" bodyfile="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.c" bodystart="210" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2007<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>\file<sp/>lm3g_model.h<sp/>Core<sp/>Sphinx<sp/>3-gram<sp/>code<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>DMP/DMP32/ARPA<sp/>(for<sp/>now)<sp/>model<sp/>code.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Author:<sp/>A<sp/>cast<sp/>of<sp/>thousands,<sp/>probably.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__NGRAM_MODEL_LM3G_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NGRAM_MODEL_LM3G_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listelem__alloc_8h" kindref="compound">sphinxbase/listelem_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngram_model_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="unionlmprob__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>f;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>l;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structsorted__entry__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsorted__entry__s" kindref="compound">sorted_entry_s</ref><sp/>{</highlight></codeline>
<codeline lineno="69" refid="structsorted__entry__s_1a7bfd6c0c9c7240695a5909044177122f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/><ref refid="structsorted__entry__s_1a7bfd6c0c9c7240695a5909044177122f" kindref="member">val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="structsorted__entry__s_1a248960abac597c0f615ab01822f6d559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/><ref refid="structsorted__entry__s_1a248960abac597c0f615ab01822f6d559" kindref="member">lower</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structsorted__entry__s_1a0b7f0225403703a4daa3780593db7237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/><ref refid="structsorted__entry__s_1a0b7f0225403703a4daa3780593db7237" kindref="member">higher</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><ref refid="structsorted__entry__s" kindref="compound">sorted_entry_t</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structsorted__list__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsorted__entry__s" kindref="compound">sorted_entry_t</ref><sp/>*list;</highlight></codeline>
<codeline lineno="84" refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structsorted__list__t_1aa7468ec9a2fe7c61d2bc76ba43c575ce" kindref="member">free</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>size;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structunigram__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structunigram__s" kindref="compound">unigram_s</ref><sp/>{</highlight></codeline>
<codeline lineno="92" refid="structunigram__s_1a488db9623272838a933cd4b768409fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/><ref refid="structunigram__s_1a488db9623272838a933cd4b768409fea" kindref="member">prob1</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/><ref refid="structunigram__s_1ad33b4af5b40a8d13ffae932bab003df6" kindref="member">bo_wt1</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structunigram__s_1ae148f631c0d9851b14bb9cb31c0c061d" kindref="member">bigrams</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbigram__s" kindref="compound">bigram_s</ref><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtrigram__s" kindref="compound">trigram_s</ref><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>To<sp/>conserve<sp/>space,<sp/>bigram<sp/>info<sp/>is<sp/>kept<sp/>in<sp/>many<sp/>tables.<sp/><sp/>Since<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>of<sp/>distinct<sp/>values<sp/>&lt;&lt;<sp/>#bigrams,<sp/>these<sp/>table<sp/>indices<sp/>can<sp/>be<sp/>16-bit<sp/>values.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>prob2<sp/>and<sp/>bo_wt2<sp/>are<sp/>such<sp/>indices,<sp/>but<sp/>keeping<sp/>trigram<sp/>index<sp/>is<sp/>less<sp/>easy.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>the<sp/>index<sp/>of<sp/>the<sp/>first<sp/>trigram<sp/>entry<sp/>for<sp/>each<sp/>bigram.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>But<sp/>such<sp/>an<sp/>index<sp/>cannot<sp/>be<sp/>represented<sp/>in<sp/>16-bits,<sp/>hence<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>segmentation<sp/>scheme:<sp/>Partition<sp/>bigrams<sp/>into<sp/>segments<sp/>of<sp/>BG_SEG_SZ</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>consecutive<sp/>entries,<sp/>such<sp/>that<sp/>#trigrams<sp/>in<sp/>each<sp/>segment<sp/>&lt;=<sp/>2**16<sp/>(the</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>corresponding<sp/>trigram<sp/>segment).<sp/><sp/>The<sp/>bigram_t.trigrams<sp/>value<sp/>is<sp/>then<sp/>a</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>16-bit<sp/>relative<sp/>index<sp/>within<sp/>the<sp/>trigram<sp/>segment.<sp/><sp/>A<sp/>separate<sp/>table--</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>lm_t.tseg_base--has<sp/>the<sp/>index<sp/>of<sp/>the<sp/>1st<sp/>trigram<sp/>for<sp/>each<sp/>bigram<sp/>segment.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BG_SEG_SZ<sp/><sp/><sp/><sp/><sp/><sp/><sp/>512<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>chosen<sp/>so<sp/>that<sp/>#trigram/segment<sp/>&lt;=<sp/>2**16<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_BG_SEG_SZ<sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structtginfo__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtginfo__s" kindref="compound">tginfo_s</ref><sp/>{</highlight></codeline>
<codeline lineno="130" refid="structtginfo__s_1aa151a34891820c55e0fef60cc74b6e05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structtginfo__s_1aa151a34891820c55e0fef60cc74b6e05" kindref="member">w1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="structtginfo__s_1a5eb046b3d09a4c80e4cdf216c6c7eb46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structtginfo__s_1a5eb046b3d09a4c80e4cdf216c6c7eb46" kindref="member">n_tg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="structtginfo__s_1ac5e9be48da8563941be03f3cd09e3c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structtginfo__s_1ac5e9be48da8563941be03f3cd09e3c25" kindref="member">bowt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="structtginfo__s_1a38d6aa51b244a7138c476a6e663ffbb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structtginfo__s_1a38d6aa51b244a7138c476a6e663ffbb4" kindref="member">used</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="structtginfo__s_1a3642dc5ac56de1829665bb7d42c9372a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*<ref refid="structtginfo__s_1a3642dc5ac56de1829665bb7d42c9372a" kindref="member">tg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="structtginfo__s_1a184e60660a4c8168b5268260cd98ffa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtginfo__s" kindref="compound">tginfo_s</ref><sp/>*<ref refid="structtginfo__s_1a184e60660a4c8168b5268260cd98ffa5" kindref="member">next</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><ref refid="structtginfo__s" kindref="compound">tginfo_t</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structlm3g__model__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_s</ref><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structunigram__s" kindref="compound">unigram_t</ref><sp/>*unigrams;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbigram__s" kindref="compound">bigram_t</ref><sp/>*bigrams;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrigram__s" kindref="compound">trigram_t</ref><sp/>*trigrams;</highlight></codeline>
<codeline lineno="146" refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/>*<ref refid="structlm3g__model__s_1a34acf8c1ffaa4bb712ce1196eea59678" kindref="member">prob2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structlm3g__model__s_1a273e6ea4c39d1a563cc59f00b4b6ee98" kindref="member">n_prob2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/>*<ref refid="structlm3g__model__s_1a7ee629aa1b8e88529127cf4da470d80f" kindref="member">bo_wt2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149" refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structlm3g__model__s_1ad4bbdd65d13712fe653afe8b1de9b096" kindref="member">n_bo_wt2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/>*<ref refid="structlm3g__model__s_1adc9ed2ad1f2daefdd40713a9dd371673" kindref="member">prob3</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structlm3g__model__s_1add28369f51e657ee54deed5291c84d09" kindref="member">n_prob3</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*<ref refid="structlm3g__model__s_1a6cec34be6a748a9cece94ae3dfc1e8d7" kindref="member">tseg_base</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="structlm3g__model__s_1a9be0c8197334e3ef632e9e3abdad6a4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtginfo__s" kindref="compound">tginfo_t</ref><sp/>**<ref refid="structlm3g__model__s_1a9be0c8197334e3ef632e9e3abdad6a4f" kindref="member">tginfo</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="structlm3g__model__s_1a2c96ba8aa34632e4d42908f9384d1b01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlistelem__alloc__s" kindref="compound">listelem_alloc_t</ref><sp/>*<ref refid="structlm3g__model__s_1a2c96ba8aa34632e4d42908f9384d1b01" kindref="member">le</ref>;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lm3g_tginfo_free(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,<sp/><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref><sp/>*lm3g);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lm3g_tginfo_reset(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,<sp/><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref><sp/>*lm3g);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lm3g_apply_weights(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref><sp/>*lm3g,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>lw,<sp/>float32<sp/>wip,<sp/>float32<sp/>uw);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">int32<sp/>lm3g_add_ug(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlm3g__model__s" kindref="compound">lm3g_model_t</ref><sp/>*lm3g,<sp/>int32<sp/>wid,<sp/>int32<sp/>lweight);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_sorted_list(<ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>*l);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_sorted_list(<ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>*l);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="unionlmprob__t" kindref="compound">lmprob_t</ref><sp/>*vals_in_sorted_list(<ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>*l);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">int32<sp/>sorted_id(<ref refid="structsorted__list__t" kindref="compound">sorted_list_t</ref><sp/>*<sp/>l,<sp/>int32<sp/>*val);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__NGRAM_MODEL_LM3G_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/hkl/voice/sphinxbase/src/libsphinxbase/lm/lm3g_model.h"/>
  </compounddef>
</doxygen>
